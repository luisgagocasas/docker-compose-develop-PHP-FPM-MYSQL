version: '3.7'

services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
    environment:
      DEFAULT_HOST: arcux.local
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./config/settings.conf:/etc/nginx/conf.d/nginx.conf:ro
    networks:
      - red

  web:
    image: crunchgeek/nginx-pagespeed:1.17.3-r1
    container_name: web
    hostname: nginx
    working_dir: /var/www/html
    restart: always
    volumes:
      - ./app:/var/www/html:ro
      - ./config:/config
    depends_on:
      - php
      - mysql
    networks:
      - red
    environment:
      VIRTUAL_HOST: arcux.local
    env_file: nginx.env

  php:
    image: crunchgeek/php-fpm:7.3-r7
    working_dir: /var/www/html
    hostname: php-fpm
    container_name: php-fpm
    networks:
      - red
    volumes:
      - ./app:/var/www/html
      - ./config:/config
    env_file: php-fpm.env

  mysql:
    image: mysql:8.0.20
    restart: always
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_HOST: mysql
      MYSQL_DATABASE: arcux
      MYSQL_ROOT_PASSWORD: 'sunway'
    networks:
      - red
    volumes:
      - ./mysql:/var/lib/mysql
    cap_add:
      - SYS_NICE

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    networks:
      - red
    expose:
      - "1025"
    environment:
      VIRTUAL_HOST: mail.arcux.local
      VIRTUAL_PORT: 8025

  sonarqube:
    image: sonarqube:8.5.1-community
    container_name: sonarqube
    restart: unless-stopped
    depends_on:
      - postgres
    networks:
      - red
    environment:
      VIRTUAL_HOST: sonar.arcux.local
      VIRTUAL_PORT: 9000
      sonar.jdbc.url: jdbc:postgresql://postgres:5432/sonar
      sonar.jdbc.username: sonar
      sonar.jdbc.password: sonar
    volumes:
      - ./sonarqube/data:/opt/sonarqube/data
      - ./sonarqube/extensions:/opt/sonarqube/extensions
      - ./sonarqube/logs:/opt/sonarqube/logs
      - ./sonarqube/temp:/opt/sonarqube/temp

  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    networks:
      - red
    volumes:
      - ./sonarqube/postgresql:/var/lib/postgresql
      - ./sonarqube/postgresql/data:/var/lib/postgresql/data

  memcached:
    image: memcached:1.6.8-alpine
    container_name: memcached
    networks:
      - red

  agent:
    container_name: newrelic
    image: newrelic/infrastructure:1.13.1-rc
    cap_add:
      - SYS_PTRACE
    network_mode: host
    pid: host
    privileged: true
    volumes:
      - "/:/host:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
    env_file:
      - newrelic.env
    restart: unless-stopped

  jenkins:
    image: jenkins/jenkins:2.249.3-lts-centos
    container_name: jenkins
    user: root
    networks:
      - red
    volumes:
      - ./jenkins:/var/jenkins_home
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      VIRTUAL_HOST: jenkins.arcux.local
      VIRTUAL_PORT: 8080

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpMyadmin
    links:
      - mysql
    networks:
      - red
    environment:
      VIRTUAL_HOST: pma.arcux.local
      PMA_ARBITRARY: 1
      PMA_HOST: mysql
    volumes:
      - ./config/php.ini:/usr/local/etc/php/php.ini

networks:
  red:
    driver: "bridge"
